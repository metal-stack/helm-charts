---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipam
spec:
  selector:
    matchLabels:
      app: ipam
  template:
    metadata:
      labels:
        app: ipam
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '2112'
    spec:
      containers:
      - name: ipam
        args:
          - postgres
        image: {{ .Values.images.ipam.image }}:{{ .Values.images.ipam.tag }}
        imagePullPolicy: {{ .Values.images.ipam.imagePullPolicy }}
        env:
          - name: GOIPAM_GRPC_SERVER_ENDPOINT
            value: {{ .Values.ipam.grpc_server_endpoint }}
          - name: GOIPAM_PG_HOST
            value: {{ .Values.ipam.db_host }}
          - name: GOIPAM_PG_PORT
            value: "{{ .Values.ipam.db_port }}"
          - name: GOIPAM_PG_DBNAME
            value: {{ .Values.ipam.db_name }}
          - name: GOIPAM_PG_PASSWORD
            value: {{ .Values.ipam.db_password }}
          - name: GOIPAM_PG_USER
            value: {{ .Values.ipam.db_user }}
          - name: GOIPAM_LOG_LEVEL
            value: "{{ .Values.ipam.log_level }}"
{{- if .Values.set_resource_limits }}
        resources:
{{ toYaml .Values.resources.ipam | indent 10 }}
{{- end }}
        ports:
        - containerPort: 2112
          protocol: TCP
        - containerPort: 9090
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9090"]
          initialDelaySeconds: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9090"]
          initialDelaySeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: ipam
  labels:
    app: ipam
spec:
  type: ClusterIP
  ports:
  - name: "{{ .Values.ports.ipam }}"
    port: {{ .Values.ports.ipam }}
    targetPort: 9090
  - name: "{{ .Values.ports.ipam_metrics }}"
    port: {{ .Values.ports.ipam_metrics }}
    targetPort: 2112
  selector:
    app: ipam
